{"version":3,"sources":["index.js"],"names":["ProductCategoryRow","category","this","props","colspan","React","Component","ProductRow","product","name","stocked","style","color","price","ProductTable","filterText","inStockOnly","rows","lastCategory","products","forEach","indexOf","push","SearchBar","handleFilterTextChange","bind","handleInStockChange","event","onFilterTextChange","target","value","onInStockChange","checked","type","placeholder","onChange","FilterableProductTable","state","setState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6c23344.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass ProductCategoryRow extends React.Component {\n  render() {\n    const category = this.props.category;\n    return (\n      <tr>\n        <th colspan=\"2\">\n          {category}\n        </th>\n      </tr>\n    );\n  }\n}\n\nclass ProductRow extends React.Component {\n  render() {\n    const product = this.props.product;\n    const name = product.stocked ?\n      product.name :\n      <span style={{color: 'red'}}>\n        {product.name}\n      </span>;\n\n    return (\n      <tr>\n        <td>{name}</td>\n        <td>{product.price}</td>\n      </tr>\n    );\n  }\n}\n\nclass ProductTable extends React.Component {\n  render() {\n    const filterText = this.props.filterText;\n    const inStockOnly = this.props.inStockOnly;\n\n    const rows = [];\n    let lastCategory = null;\n\n    this.props.products.forEach((product) => {\n      if (product.name.indexOf(filterText) === -1) {\n        return;\n      }\n      if (inStockOnly && !product.stocked) {\n        return;\n      }\n      if (product.category !== lastCategory) {\n        rows.push(\n          <ProductCategoryRow \n            category={product.category}\n            key={product.category} />\n        );\n      }\n      rows.push(\n        <ProductRow\n          product={product}\n          key={product.name} />\n      );\n      lastCategory=product.category;\n    });\n\n    return (\n      <table>\n        <thead>\n          <th>Name</th>\n          <th>Price</th>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    );\n  }\n}\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n    this.handleInStockChange = this.handleInStockChange.bind(this);\n  }\n\n  handleFilterTextChange(event) {\n    this.props.onFilterTextChange(event.target.value);\n  }\n\n  handleInStockChange(event) {\n    this.props.onInStockChange(event.target.checked);\n  }\n\n  render() {\n    const filterText = this.props.filterText;\n    const inStockOnly = this.props.inStockOnly;\n\n    return (\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={filterText}\n          onChange={this.handleFilterTextChange} />\n        <p>\n          <input \n            type=\"checkbox\"\n            checked={inStockOnly}\n            onChange={this.handleInStockChange} />\n          {' '}\n          Only show products in stock\n        </p>\n      </form>\n    );\n  }\n}\n\nclass FilterableProductTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filterText: '',\n      inStockOnly: false\n    };\n\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n    this.handleInStockChange = this.handleInStockChange.bind(this);\n  }\n\n  handleFilterTextChange(filterText) {\n    this.setState({\n      filterText: filterText\n    });\n  }\n\n  handleInStockChange(inStockOnly) {\n    this.setState({\n      inStockOnly: inStockOnly\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchBar\n          filterText={this.state.filterText}\n          inStockOnly={this.state.inStockOnly}\n          onFilterTextChange={this.handleFilterTextChange}\n          onInStockChange={this.handleInStockChange} />\n        <ProductTable \n          products={this.props.products}\n          filterText={this.state.filterText}\n          inStockOnly={this.state.inStockOnly} />\n      </div>\n    );\n  }\n}\n\n\n\nconst PRODUCTS = [\n  {category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},\n  {category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},\n  {category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},\n  {category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},\n  {category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},\n  {category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}\n];\n\nReactDOM.render(\n  <FilterableProductTable products={PRODUCTS} />,\n  document.getElementById('container')\n);"],"sourceRoot":""}